{"version":3,"sources":["index.js"],"names":["DirectoryView","props","console","log","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","SearchForm","searchVal","handleChange","recipes","map","recipe","RecipeCard","updateDetails","id","name","key","DetailView","className","ingredients","step","i","instructions","class","value","onChange","onClick","App","state","selectedRecipes","details","shouldShowDetails","event","_this","setState","target","selectRecipes","filter","toLowerCase","includes","forEach","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.77fd2d32.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\n\nconst DirectoryView = (props) => {\n    console.log = (props);\n    return (\n        <div>\n            <SearchForm searchVal={props.searchVal} handleChange={props.handleChange} />\n            {props.recipes.map(recipe =>\n                <RecipeCard updateDetails={props.updateDetails}\n                    id={recipe.id}\n                    name={recipe.name} key={recipe.id} />)}\n        </div>\n    );\n}\n\nconst DetailView = (props) => (\n    <div className=\"position\">\n        <h2>{props.name}</h2>\n        <div className=\"ingredients\">Ingredients:</div>{props.ingredients.map((step, i) => <p key={i}>{step} </p>)}\n        <div className=\"instructions\">Instructions:</div>{props.instructions.map((step, i) => <p key={i}>{step} </p>)}\n    </div>\n);\n\nconst SearchForm = (props) => (\n    <form>\n        <input class=\"input\" value={props.searchVal} onChange={props.handleChange} />\n        <button class=\"button\">Search</button>\n    </form>\n);\n\nconst RecipeCard = (props) => (\n    <div onClick={() => props.updateDetails(props.id)}>\n        <p>{props.name}</p>\n    </div>\n);\n\nclass App extends React.Component {\n    state = {\n        recipes: [\n            {\n                id: 1,\n                name: 'Turkey Mayhem',\n                ingredients: ['• Turkey', '• Mustard', '• Greens', '• Celery', '• Potato'],\n                instructions: ['• Pre-heat over to 350 degrees', '• Tickle the turkey', '• Cut some celery']\n            },\n            {\n                id: 2,\n                name: 'Mac and Cheese',\n                ingredients: ['• Mac', '• Cheese'],\n                instructions: ['• Put the mac in the cheese', '• Swish it around', '• Bake for 15 minutes at 350 degrees']\n            },\n            {\n                id: 3,\n                name: 'Spanakopita',\n                ingredients: ['• Olive oil', '• Onion', '• Garlic', '• Spinach'],\n                instructions: ['• Put the stuff in a bowl', '• Cook the stuff']\n            },\n            {\n                id: 4,\n                name: 'Vasilopita',\n                ingredients: ['• Flower', '• Baking Soda', '• Butter', '• Sugar', '• Eggs'],\n                instructions: ['• Throw everything in the air and hope it comes together', '• Knead the bread', '• Show the bread some love', '• Bake it at 400 degrees']\n            },\n            {\n                id: 5,\n                name: 'Cheese Lollipops Dessert',\n                ingredients: ['• Eggs', '• Cream Cheese', '• Sugar', '• Sour Cream', '• Flour', '• Vanilla', '• Salt', '• Lollipop Sticks'],\n                instructions: ['• Use mini chocolate chips, toasted coconut and sprinkles', '• Dip the pops into caramel topping']\n            },\n            {\n                id: 6,\n                name: 'Baked Kale Chips',\n                ingredients: ['• Bunch Kale', '• Olive Oil', '• Salt'],\n                instructions: ['• Drizzle kale with olive oil', '• Sprinkle with seasoning salt', '• Bake until the edges brown 10 to 15 minutes']\n            },\n            {\n                id: 7,\n                name: 'Honey Mustard Eggs',\n                ingredients: ['• Honey', '• Mustard', '• Mayonnaise', '• Sugar', '• Salt', '• Eggs'],\n                instructions: ['• Slice eggs', '• Mash it until yolks resemble powder', '• Stir mayonnaise, sugar, honey mustard, salt until smooth']\n            },\n            {\n                id: 8,\n                name: 'Greek Salad',\n                ingredients: ['• Romaine', '• Onion', '• Olives', '• Bell Peppers', '• Cucumber', '• Cheese'],\n                instructions: ['• Combine Romaine, onion, olives, bell peppers, cucumber, olive oil']\n            },\n            {\n                id: 9,\n                name: 'Lemon Juice',\n                ingredients: ['• Water', '• Lemon', '• Sugar'],\n                instructions: ['• Cut lemons, juice them and add sugar', '• Combine sugar solution with lemon juice']\n            },\n            {\n                id: 10,\n                name: 'Banana Chips',\n                ingredients: ['• Bananas', '• Olive Oil', '• Salt'],\n                instructions: ['• Drizzle bananas with olive oil', '• Sprinkle with seasoning salt', '• Bake until the edges brown 10 to 15 minutes']\n            },\n            {\n                id: 11,\n                name: 'Cheese Burger',\n                ingredients: ['• Burger Bread', '• Cheese', '• Lettuce', '• Tomatoes'],\n                instructions: ['• Spread the cheese on burger bread', '• Add lettuce and tomatoes']\n            },\n            {\n                id: 12,\n                name: 'Pudding Cake',\n                ingredients: ['• Flour', '• Sugar', '• Salt', '• Water', ],\n                instructions: ['• Mix all ingredents in a bowl', '• Bake until brown 10 to 15 minutes']\n            },\n            {\n                id: 13,\n                name: 'Orange Juice',\n                ingredients: ['• Oranges', '• Sugar'],\n                instructions: ['• Cut oranges, juice them and add sugar', '• Combine sugar solution with orange juice']\n            },\n            {\n                id: 14,\n                name: 'Chicken Burger',\n                ingredients: ['• Burger Bread', '• Cheese', '• Lettuce', '• Tomatoes', '• Chicken'],\n                instructions: ['• Spread the cheese on burger bread', '• Add chicken, lettuce and tomatoes']\n            },\n            {\n                id: 15,\n                name: 'Garden Salad',\n                ingredients: ['• Lettuce', '• Onion', '• Olives', '• Bell Peppers', '• Cucumber', '• Cheese'],\n                instructions: ['• Combine Lettuce, onion, olives, bell peppers, cucumber, cheese, olive oil']\n            },\n\n        ],\n        searchVal: '',\n        selectedRecipes: [],\n        details: {},\n        shouldShowDetails: false,\n    }\n\n    handleChange = (event) => {\n        this.setState({ searchVal: event.target.value, shouldShowDetails: false });\n        this.selectRecipes()\n    }\n\n    selectRecipes = () => {\n        let recipes = this.state.recipes.filter(recipe => recipe.name.toLowerCase().includes(this.state.searchVal.toLowerCase()))\n        this.setState({ selectedRecipes: recipes })\n    }\n\n    updateDetails = id => {\n        this.setState({ shouldShowDetails: true })\n        this.state.recipes.forEach(recipe => {\n            if (recipe.id === id) {\n                this.setState({\n                    details: recipe\n                })\n            }\n        })\n\n    }\n\n    render() {\n\n        let details\n        if (this.state.shouldShowDetails) {\n            details = (<DetailView\n                name={this.state.details.name}\n                key={this.state.details.id}\n                ingredients={this.state.details.ingredients}\n                instructions={this.state.details.instructions}\n            />)\n        }\n        return (\n            <div className=\"app\">\n                <header>Recipe-App</header>\n                <DirectoryView\n\n                    recipes={this.state.selectedRecipes}\n                    searchVal={this.state.searchVal}\n                    handleChange={this.handleChange}\n                    updateDetails={this.updateDetails}\n                />\n                {details}\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}